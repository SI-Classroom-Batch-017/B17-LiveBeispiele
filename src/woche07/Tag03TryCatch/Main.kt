package woche07.Tag03TryCatch

import woche07.Tag02KlasseMitAttackeBeutelProzent.Helden.Pokemon

fun main() {

    /*
        Das Farbcodes \u001B[31m ist ein ANSI-Escape-Code, ANSI = "American National Standards Institute"
        der zum Festlegen der Textfarbe auf Rot im Konsolenfenster verwendet wird.
         Die Zahl 31 repräsentiert die Farbe Rot in dem ANSI-Escape-Code für Vordergrundfarben.
        * */
    val red = "\u001b[31m"
    val green = "\u001b[32m"
    val yellow = "\u001b[33m"
    val blue = "\u001b[34m"
    val magenta = "\u001b[35m"
    val cyan = "\u001b[36m"
    val bold = "\u001b[1m"
    val underline = "\u001b[4m"
    val backgroundYellow = "\u001b[43m"
    // alle zuvor verwendenten Formatierungen zurücksetzen, ohne bleiben sie auch in den nächsten prinlns bestehen
    val reset = "\u001b[0m"

    println("$bold $red Hello world")

    print("$red Roter Text $reset")
    println()

    // Nutzung Ansi Escape Codes mit Variablen
    println("${red}Roter Text${reset}")
    println("${green}Grüner Text${reset}")
    println("${yellow}Gelber Text${reset}")
    println("${blue}Blauer Text${reset}")


    println("${bold}Fetter Text${reset}")
    println("${underline}Unterstrichener Text${reset}")

    println()
    //alle Textfarben mit Schleifen ausdrucken
    for (a in 30..97) {
        if (a in 38..89) continue
        //"%3d" ist abstand
        println("\u001b[${a}m ${"%3d".format(a)} ")
    }

    println()

    //alle Hintergrundfarben mit Schleifen ausdrucken
    for (i in 40..107) {
        if (i in 48..99) continue
        //"%3d" ist abstand
        println("\u001b[${i}m ${"%3d".format(i)} ")
    }

    println("""
  ______             __        __                             ______                         __                         
 /      \           /  |      /  |                           /      \                       /  |                        
/${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |  ______  ${'$'}${'$'} |  ____${'$'}${'$'} |  ______   _______        /${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  | __    __  _______   _${'$'}${'$'} |_     ______   __    __ 
${'$'}${'$'} | _${'$'}${'$'}/  /      \ ${'$'}${'$'} | /    ${'$'}${'$'} | /      \ /       \       ${'$'}${'$'} \__${'$'}${'$'}/ /  |  /  |/       \ / ${'$'}${'$'}   |   /      \ /  \  /  |
${'$'}${'$'} |/    |/${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |${'$'}${'$'} |/${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'} |/${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |      ${'$'}${'$'}      \ ${'$'}${'$'} |  ${'$'}${'$'} |${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/    ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |${'$'}${'$'}  \/${'$'}${'$'}/ 
${'$'}${'$'} |${'$'}${'$'}${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |${'$'}${'$'}    ${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |       ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}  |${'$'}${'$'} |  ${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |  ${'$'}${'$'} | __  /    ${'$'}${'$'} | ${'$'}${'$'}  ${'$'}${'$'}<  
${'$'}${'$'} \__${'$'}${'$'} |${'$'}${'$'} \__${'$'}${'$'} |${'$'}${'$'} |${'$'}${'$'} \__${'$'}${'$'} |${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/ ${'$'}${'$'} |  ${'$'}${'$'} |      /  \__${'$'}${'$'} |${'$'}${'$'} \__${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |  ${'$'}${'$'} |/  |/${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'} | /${'$'}${'$'}${'$'}${'$'}  \ 
${'$'}${'$'}    ${'$'}${'$'}/ ${'$'}${'$'}    ${'$'}${'$'}/ ${'$'}${'$'} |${'$'}${'$'}    ${'$'}${'$'} |${'$'}${'$'}       |${'$'}${'$'} |  ${'$'}${'$'} |      ${'$'}${'$'}    ${'$'}${'$'}/ ${'$'}${'$'}    ${'$'}${'$'} |${'$'}${'$'} |  ${'$'}${'$'} |  ${'$'}${'$'}  ${'$'}${'$'}/ ${'$'}${'$'}    ${'$'}${'$'} |/${'$'}${'$'}/ ${'$'}${'$'}  |
 ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/   ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/  ${'$'}${'$'}/  ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/  ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/ ${'$'}${'$'}/   ${'$'}${'$'}/        ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/   ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'} |${'$'}${'$'}/   ${'$'}${'$'}/    ${'$'}${'$'}${'$'}${'$'}/   ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/ ${'$'}${'$'}/   ${'$'}${'$'}/ 
                                                                      /  \__${'$'}${'$'} |                                        
                                                                      ${'$'}${'$'}    ${'$'}${'$'}/                                         
                                                                       ${'$'}${'$'}${'$'}${'$'}${'$'}${'$'}/                                          
    """.trimIndent())





}